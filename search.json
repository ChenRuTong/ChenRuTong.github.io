[{"title":"Hello World","url":"/2023/02/13/hello-world/","content":"Welcome to Hexo ! This is your very first post. Check documentation  for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting  or you can ask me on GitHub .\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing \nRun server$ hexo server\n\nMore info: Server \nGenerate static files$ hexo generate\n\nMore info: Generating \nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment \n"},{"title":"前端解析excel 文件","url":"/2023/02/13/%E5%89%8D%E7%AB%AF%E8%A7%A3%E6%9E%90excel-%E6%96%87%E4%BB%B6/","content":"最近碰到了这样的需求 ： 把excel表格导入解析，然后把excel表格的数据渲染在页面上\n针对这个需求，我写了一个解析excel表格的小demo，希望对大家有所帮助\n解析excel 表格需要用到两个插件\n\nxlsx  https://www.npmjs.com/package/xlsx \n\nvue-papa-parse https://www.npmjs.com/package/vue-papa-parse \n\nelement-ui  https://element.eleme.cn/#/zh-CN \n\n\n\n第一步先下载两个插件：npm i vue-papa-parse -S\nnpm i xlsx -S\nnpm i element-ui -S\n\n第二步在main.js 引入插件 import ElementUI from &#x27;element-ui&#x27;;import &#x27;element-ui/lib/theme-chalk/index.css&#x27;;import VuePapaParse from &#x27;vue-papa-parse&#x27;Vue.use(ElementUI)Vue.use(VuePapaParse)\n\n然后准备工作就做好了，下面是我自己写的解析excel的小demo（vue+Ts）&lt;template&gt;  &lt;div id=&quot;app&quot;&gt;    &lt;div class=&quot;upBox&quot;&gt;        &lt;el-upload        class=&quot;upload-demo&quot;        accept=&quot;application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;        action        :http-request=&quot;upexcel&quot;        :show-file-list=&quot;false&quot;        &gt;        &lt;el-button size=&quot;small&quot; type=&quot;primary&quot;&gt;点击上传&lt;/el-button&gt;        &lt;/el-upload&gt;        &lt;input type=&quot;text&quot; disabled v-model=&quot;fileName&quot;&gt;        &lt;el-button size=&quot;small&quot; type=&quot;danger&quot; @click=&quot;clear&quot;&gt;清除&lt;/el-button&gt;    &lt;/div&gt;  &lt;el-table     v-loading=&quot;loading&quot;      :data=&quot;tableData&quot;      stripe      border      style=&quot;width: 100%; margin:0 auto; marginTop:50px&quot;&gt;      &lt;el-table-column        prop=&quot;date&quot;        label=&quot;日期&quot;        width=&quot;180&quot;&gt;      &lt;/el-table-column&gt;      &lt;el-table-column        prop=&quot;name&quot;        label=&quot;姓名&quot;        width=&quot;180&quot;&gt;      &lt;/el-table-column&gt;      &lt;el-table-column        prop=&quot;address&quot;        label=&quot;地址&quot;&gt;      &lt;/el-table-column&gt;    &lt;/el-table&gt;    &lt;router-view/&gt;  &lt;/div&gt;&lt;/template&gt; &lt;script lang=&quot;ts&quot;&gt;import * as XLSX from &#x27;xlsx&#x27;import &#123;tableInfo, tableArr&#125; from &#x27;../src/type/tableData&#x27;import Vue from &#x27;vue&#x27;export default Vue.extend(&#123;  data() &#123;    return &#123;      tableData:tableArr(),      fileName:&#x27;&#x27;,      loading:false    &#125;  &#125;,  methods:&#123;    upexcel(e: any) &#123;      let file = e.file      if(!file) return      // 把文件按照二进制进行读取      this.loading = true      this.fileName = file.name      let reader = new FileReader();      reader.readAsBinaryString(file);\t\t  reader.onload = (ev :any) =&gt; &#123;\t\t\tlet data = ev.target.result      this.toJosn(data)\t\t&#125;;    &#125;,    toJosn(data: any) &#123;      //读取FILE中的数据（变为JSON格式）      let workbook = XLSX.read(data, &#123; type: &quot;binary&quot; &#125;);      let worksheet = workbook.Sheets[workbook.SheetNames[1]];      let csv = XLSX.utils.sheet_to_csv(worksheet);      let order_data = this.$papa.parse(csv)      let data_value = order_data.data      setTimeout(this.setData,3000,data_value)    &#125;,    setData(data_value: any) &#123;      let arr = []      for(let i = 1; i&lt;data_value.length; i++) &#123;        let obj = tableInfo()         obj.date = data_value[i][0]         obj.name = data_value[i][1]         obj.address = data_value[i][2]         arr.push(obj)      &#125;      this.tableData = arr      this.loading = false    &#125;,    clear() &#123;      this.tableData = [];      this.fileName = &#x27;&#x27;;      this.loading = false    &#125;  &#125;&#125;)&lt;/script&gt; &lt;style lang=&quot;scss&quot;&gt;#app &#123;  width: 70%;  user-select: none; //文本不能被选取  margin: 0 auto;  .upBox &#123;    width: 100%;    display: flex;    align-items: center;    justify-content: center;    height: 32px;  input &#123;      height:32px;      box-sizing: border-box;      margin-left: 20px;      margin-right: 20px;    &#125;  &#125;&#125;&lt;/style&gt;\n\n..&#x2F;src&#x2F;type&#x2F;tableData 里面的代码是：  export type tableObj = &#123;    date: string,    name: string,    address: string&#125;export const tableInfo =():tableObj=&gt; &#123;    return &#123;&#125; as tableObj&#125;export const tableArr =():tableObj[]=&gt; &#123;    return []&#125;","tags":["vue"]}]